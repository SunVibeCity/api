openapi: 3.0.0
info:
  description: |
    SunVibe is a Solar Energy Platform where small investors - crowd founders - together finance solar panel
    installation on the roof of other peopleâ€™s - roof lenders - house.
    The installation is constructing by authorized Installers, but the quality assurance and monitoring done by SunVibe.
  title: "SunVibe API"
  termsOfService: "http://sunvibe.vn/terms"
  contact:
    email: "apiteam@sunvibe.vn"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: "0.1.0"
servers:
  - url: "http://api.sunvibe.vn/v1"
    description: "Main (production) server"
  - url: "http://staging-api.sunvibe.vn"
    description: "Internal staging server for testing"
tags:
- name: "bid"
  description: |
    Bid operations.
  externalDocs:
    description: "Find more information related to investors in our website."
    url: "http://sunvibe.vn"
paths:
  /bids:
    get:
      description: |
        Returns all bids - buying offers.
      operationId: findBids
      parameters:
        - name: status
          in: query
          description: status to filter by
          required: false
          style: form
          schema:
            type: string
            enum:
            - "open"
            - "cancelled"
            - "completed"
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
      responses:
        '200':
          description: Bid response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bid'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new bid in the market
      operationId: addBid
      requestBody:
        description: Bid to add to the market
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBid'
      responses:
        '200':
          description: bid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bid'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - "investor"
  /bids/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the bid
      operationId: find bid by id
      parameters:
        - name: id
          in: path
          description: ID of bid to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: bid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bid'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single bid based on the ID supplied
      operationId: deleteBid
      parameters:
        - name: id
          in: path
          description: ID of bid to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: bid deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://sunvibe.vn/oauth/authorize
          tokenUrl: https://sunvibe.vn/oauth/token
          scopes:
            investor: Grants investor access
            admin: Grants access to admin operations
  schemas:
    NewBid:
      type: object
      properties:
        quantity:
          type: "integer"
          format: "int32"
        price:
          type: "integer"
          format: "int64"
      required:
        - quantity
        - price
    Bid:
      allOf:
        - $ref: '#/components/schemas/NewBid'
        - properties:
            id:
              type: "integer"
              format: "int64"
            bidder:
              $ref: '#/components/schemas/Investor'
            status:
              type: "string"
              description: "Bid Status"
              enum:
              - "open"
              - "cancelled"
              - "completed"
            active:
              type: "boolean"
              default: true
            created:
              type: "string"
              format: "date-time"
            modified:
              type: "string"
              format: "date-time"
          required:
            - id
    Investor:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
          format: "password"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
externalDocs:
  description: "Find out more about SunVibe"
  url: "http://sunvibe.vn"

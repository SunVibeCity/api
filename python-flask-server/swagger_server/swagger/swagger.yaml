---
swagger: "2.0"
info:
  description: "SunVibe is a Solar Energy Platform where small investors - crowd founders\
    \ - together finance solar panel\ninstallation on the roof of other peopleâ€™s -\
    \ roof lenders - house.\nThe installation is constructing by authorized Installers,\
    \ but the quality assurance and monitoring done by SunVibe.  version: \"0.1.0\"\
    \n"
  version: "0.1.0"
  title: "SunVibe API"
  termsOfService: "http://sunvibe.vn/terms"
  contact:
    email: "apiteam@sunvibe.vn"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "bid"
  description: "Bid operations"
  externalDocs:
    description: "Find out more about our web site"
    url: "http://sunvibe.vn/investor"
schemes:
- "http"
paths:
  /bids:
    get:
      tags:
      - "bid"
      summary: "List Bids"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "list_bids"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: false
        type: "array"
        items:
          type: "string"
          default: "available"
          enum:
          - "available"
          - "pending"
          - "sold"
        collectionFormat: "multi"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bid"
        400:
          description: "Invalid status value"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/ErrorModel"
      x-swagger-router-controller: "swagger_server.controllers.bid_controller"
    post:
      tags:
      - "bid"
      summary: "Add a new bid to the market"
      description: "Add token buying offering"
      operationId: "add_bid"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Bid object that needs to be added to the market"
        required: true
        schema:
          $ref: "#/definitions/NewBid"
      responses:
        201:
          description: "Created"
        405:
          description: "Invalid input"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/ErrorModel"
      security:
      - OAuth2:
        - "investor"
      x-swagger-router-controller: "swagger_server.controllers.bid_controller"
  /bids/{id}:
    get:
      tags:
      - "bid"
      description: "Returns a user based on a single ID, if the user does not have\
        \ access to the pet"
      operationId: "get_bid_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of bid to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Bid"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Bid not found"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/ErrorModel"
      x-swagger-router-controller: "swagger_server.controllers.bid_controller"
    put:
      tags:
      - "bid"
      summary: "Update an existing bid"
      description: ""
      operationId: "update_bid"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of bid to fetch"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Bid object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Bid"
      responses:
        201:
          description: "Updated"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Bid not found"
        405:
          description: "Validation exception"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/ErrorModel"
      security:
      - OAuth2:
        - "investor"
      x-swagger-router-controller: "swagger_server.controllers.bid_controller"
    delete:
      tags:
      - "bid"
      description: "deletes a single bet based on the ID supplied"
      operationId: "delete_bid"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of bid to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "bid deleted"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Bid not found"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/ErrorModel"
      x-swagger-router-controller: "swagger_server.controllers.bid_controller"
securityDefinitions:
  BasicAuth:
    type: "basic"
  ApiKeyAuth:
    type: "apiKey"
    name: "X-API-Key"
    in: "header"
  OAuth2:
    type: "oauth2"
    authorizationUrl: "https://sunvibe.vn/oauth/authorize"
    tokenUrl: "https://sunvibe.vn/oauth/token"
    flow: "accessCode"
    scopes:
      investor: "Grants investor access"
      admin: "Grants access to administrative information"
definitions:
  NewBid:
    type: "object"
    required:
    - "price"
    - "quantity"
    properties:
      quantity:
        type: "integer"
        format: "int32"
      price:
        type: "integer"
        format: "int64"
    example:
      quantity: 0
      price: 6
  Bid:
    allOf:
    - $ref: "#/definitions/NewBid"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        bidder:
          $ref: "#/definitions/Investor"
        status:
          type: "string"
          description: "Bid Status"
          enum:
          - "open"
          - "cancelled"
          - "completed"
        active:
          type: "boolean"
          default: true
        created:
          type: "string"
          format: "date-time"
        modified:
          type: "string"
          format: "date-time"
  Investor:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      phone:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
        format: "password"
  ErrorModel:
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
externalDocs:
  description: "Find out more about SunVibe"
  url: "http://sunvibe.vn"
